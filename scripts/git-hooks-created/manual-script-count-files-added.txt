create folder scripts on root

create folder .metrics on root

create a pre-commit file inside scripts/git-hooks-created (to have a reference for future projects)

  put this inside the pre-commit
    #!/bin/sh
    # goes in .git/hooks/pre-commit
    # no extension needed in the file (like .sh for example)
    # but you will need to make it executable -> chmod +x .git/hooks/pre-commit
    #
    # Run the metric updater every commit
    "$(git rev-parse --show-toplevel)/scripts/update_lines_added.sh"

create a file update_files_added.sh inside scripts

  put this inside the update_lines_added
    #!/usr/bin/env bash
    set -euo pipefail

    METRICS_DIR=".metrics"
    FILE="$METRICS_DIR/encrypted_files_added_total.txt"
    mkdir -p "$METRICS_DIR"

    # ----- get current total (default 0) -----
    if [[ -s "$FILE" ]]; then
      total=$(<"$FILE")
      [[ "$total" =~ ^[0-9]+$ ]] || total=0
    else
      total=0
    fi

    # ----- count files ADDED (status=A) under encrypted/ in this commit -----
    # Exclude the metrics file itself just in case
    added_files=$(git diff --cached --name-status --diff-filter=A -- 'encrypted/*' \
      | awk '$2 != ".metrics/encrypted_files_added_total.txt" {c++} END{print c+0}')

    # If none, exit quietly so other hooks can run
    [[ "$added_files" -eq 0 ]] && exit 0

    # ----- write updated cumulative total -----
    new_total=$(( total + added_files ))
    echo "$new_total" > "$FILE"

    echo "Encrypted files added: $added_files | New total â†’ $new_total"

    # stage the updated metric file
    git add "$FILE"

copy the pre-commit file created to your git repo hooks in .git/hooks/pre-commit

give that copied pre-commit file executable access

  chmod +x .git/hooks/pre-commit

after that every time you do a commit you will update a file
  it will create the total_lines_added file added if there is none